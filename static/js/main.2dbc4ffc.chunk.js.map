{"version":3,"sources":["components/MeetingFooter/MeetingFooter.component.js","components/Shared/Card/Card.component.js","components/Participants/Participant/Participant.component.js","components/Participants/Participants.component.js","store/actiontypes.js","store/actioncreator.js","components/MainScreen/MainScreen.component.js","server/firebase.js","App.js","reportWebVitals.js","server/peerConnection.js","store/reducer.js","index.js"],"names":["MeetingFooter","props","_useState","useState","mic","video","screen","_useState2","_slicedToArray","streamState","setStreamState","setScreenState","isEnabled","currentState","_objectSpread","useEffect","onMicClick","onVideoClick","_jsxs","className","children","_jsx","data-tip","onClick","FontAwesomeIcon","icon","faMicrophone","faMicrophoneSlash","title","faVideo","faVideoSlash","onScreenClick","disabled","faDesktop","ReactTooltip","Card","Participant","curentIndex","currentParticipant","hideVideo","videoRef","showAvatar","currentUser","concat","ref","id","autoPlay","playsInline","audio","style","background","avatarColor","name","_Fragment","connect","state","participants","stream","mainStream","useRef","participantKey","Object","keys","current","srcObject","muted","values","gridCol","length","gridColSize","gridRowSize","Math","ceil","screenPresenter","find","element","map","index","pc","peerConnection","remoteStream","MediaStream","ontrack","event","streams","getTracks","forEach","track","addTrack","videElement","document","getElementById","SET_MAIN_STREAM","ADD_PARTICIPANT","REMOVE_PARTICIPANT","SET_USER","UPDATE_USER","UPDATE_PARTICIPANT","setMainStream","type","payload","dispatch","updateUser","user","participantRef","updateStream","key","sender","getSenders","s","kind","replaceTrack","getVideoTracks","onScreenShareEnd","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","localStream","wrap","_context","prev","next","navigator","mediaDevices","getUserMedia","sent","enabled","stop","apply","arguments","_ref2","_callee2","mediaStream","_context2","getDisplayMedia","mediaSource","onended","Participants","micEnabled","getAudioTracks","videoEnabled","firebase","initializeApp","apiKey","databaseURL","db","firepadRef","database","userName","prompt","roomId","URLSearchParams","window","location","search","get","child","push","history","replaceState","addParticipant","newUser","setUser","removeParticipant","userId","updateParticipant","getUserStream","abrupt","connectedRef","on","snap","val","defaultPreference","userStatusRef","preferences","_defineProperty","onDisconnect","remove","isUserSet","isStreamSet","preferenceSnap","_snap$val","_snap$val$preferences","MainScreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","updatePreference","preference","currentParticipantRef","setTimeout","update","createOffer","receiverId","createdID","offerDescription","offer","onicecandidate","candidate","toJSON","setLocalDescription","sdp","set","_x","_x2","_x3","initializeListensers","_callee3","currentUserRef","_context3","_ref3","snapshot","data","store","getState","setRemoteDescription","RTCSessionDescription","createAnswer","_x5","addIceCandidate","RTCIceCandidate","answer","answerDescription","_x4","_ref4","_callee4","otherUserId","participantRef1","_context4","_x6","_x7","defaultUserState","servers","iceServers","urls","iceCandidatePoolSize","generateColor","floor","random","toString","addConnection","RTCPeerConnection","newUserId","currentUserId","offerIds","sort","a","b","localeCompare","createStore","undefined","action","ReactDOM","render","React","StrictMode","Provider","App"],"mappings":"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","file":"static/js/main.2dbc4ffc.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMicrophone,\n  faVideo,\n  faDesktop,\n  faVideoSlash,\n  faMicrophoneSlash,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport ReactTooltip from \"react-tooltip\";\nimport \"./MeetingFooter.css\";\nconst MeetingFooter = (props) => {\n  const [streamState, setStreamState] = useState({\n    mic: true,\n    video: false,\n    screen: false,\n  });\n  const micClick = () => {\n    setStreamState((currentState) => {\n      return {\n        ...currentState,\n        mic: !currentState.mic,\n      };\n    });\n  };\n\n  const onVideoClick = () => {\n    setStreamState((currentState) => {\n      return {\n        ...currentState,\n        video: !currentState.video,\n      };\n    });\n  };\n\n  const onScreenClick = () => {\n    props.onScreenClick(setScreenState);\n  };\n\n  const setScreenState = (isEnabled) => {\n    setStreamState((currentState) => {\n      return {\n        ...currentState,\n        screen: isEnabled,\n      };\n    });\n  };\n  useEffect(() => {\n    props.onMicClick(streamState.mic);\n  }, [streamState.mic]);\n  useEffect(() => {\n    props.onVideoClick(streamState.video);\n  }, [streamState.video]);\n  return (\n    <div className=\"meeting-footer\">\n      <div\n        className={\"meeting-icons \" + (!streamState.mic ? \"active\" : \"\")}\n        data-tip={streamState.mic ? \"Mute Audio\" : \"Unmute Audio\"}\n        onClick={micClick}\n      >\n        <FontAwesomeIcon\n          icon={!streamState.mic ? faMicrophoneSlash : faMicrophone}\n          title=\"Mute\"\n        />\n      </div>\n      <div\n        className={\"meeting-icons \" + (!streamState.video ? \"active\" : \"\")}\n        data-tip={streamState.video ? \"Hide Video\" : \"Show Video\"}\n        onClick={onVideoClick}\n      >\n        <FontAwesomeIcon icon={!streamState.video ? faVideoSlash : faVideo} />\n      </div>\n      <div\n        className=\"meeting-icons\"\n        data-tip=\"Share Screen\"\n        onClick={onScreenClick}\n        disabled={streamState.screen}\n      >\n        <FontAwesomeIcon icon={faDesktop} />\n      </div>\n      <ReactTooltip />\n    </div>\n  );\n};\n\nexport default MeetingFooter;\n","import React from \"react\";\nimport \"./Card.css\";\n\nconst Card = (props) => {\n  return <div className=\"card\">{props.children}</div>;\n};\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"../../Shared/Card/Card.component\";\nimport { faMicrophoneSlash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./Participant.css\";\n\nexport const Participant = (props) => {\n  const {\n    curentIndex,\n    currentParticipant,\n    hideVideo,\n    videoRef,\n    showAvatar,\n    currentUser,\n  } = props;\n  if (!currentParticipant) return <></>;\n  return (\n    <div className={`participant ${hideVideo ? \"hide\" : \"\"}`}>\n      <Card>\n        <video\n          ref={videoRef}\n          className=\"video\"\n          id={`participantVideo${curentIndex}`}\n          autoPlay\n          playsInline\n        ></video>\n        {!currentParticipant.audio && (\n          <FontAwesomeIcon\n            className=\"muted\"\n            icon={faMicrophoneSlash}\n            title=\"Muted\"\n          />\n        )}\n        {showAvatar && (\n          <div\n            style={{ background: currentParticipant.avatarColor }}\n            className=\"avatar\"\n          >\n            {currentParticipant.name[0]}\n          </div>\n        )}\n        <div className=\"name\">\n          {currentParticipant.name}\n          {currentUser ? \"(You)\" : \"\"}\n        </div>\n      </Card>\n    </div>\n  );\n};\n","import React, { useEffect, useRef } from \"react\";\nimport \"./Participants.css\";\nimport { connect } from \"react-redux\";\nimport { Participant } from \"./Participant/Participant.component\";\n\nconst Participants = (props) => {\n  const videoRef = useRef(null);\n  let participantKey = Object.keys(props.participants);\n  useEffect(() => {\n    if (videoRef.current) {\n      videoRef.current.srcObject = props.stream;\n      videoRef.current.muted = true;\n    }\n  }, [props.currentUser, props.stream]);\n\n  const currentUser = props.currentUser\n    ? Object.values(props.currentUser)[0]\n    : null;\n\n  let gridCol =\n    participantKey.length === 1 ? 1 : participantKey.length <= 4 ? 2 : 4;\n  const gridColSize = participantKey.length <= 4 ? 1 : 2;\n  let gridRowSize =\n    participantKey.length <= 4\n      ? participantKey.length\n      : Math.ceil(participantKey.length / 2);\n\n  const screenPresenter = participantKey.find((element) => {\n    const currentParticipant = props.participants[element];\n    return currentParticipant.screen;\n  });\n\n  if (screenPresenter) {\n    gridCol = 1;\n    gridRowSize = 2;\n  }\n  const participants = participantKey.map((element, index) => {\n    const currentParticipant = props.participants[element];\n    const isCurrentUser = currentParticipant.currentUser;\n    if (isCurrentUser) {\n      return null;\n    }\n    const pc = currentParticipant.peerConnection;\n    const remoteStream = new MediaStream();\n    let curentIndex = index;\n    if (pc) {\n      pc.ontrack = (event) => {\n        event.streams[0].getTracks().forEach((track) => {\n          remoteStream.addTrack(track);\n        });\n        const videElement = document.getElementById(\n          `participantVideo${curentIndex}`\n        );\n        if (videElement) videElement.srcObject = remoteStream;\n      };\n    }\n\n    return (\n      <Participant\n        key={curentIndex}\n        currentParticipant={currentParticipant}\n        curentIndex={curentIndex}\n        hideVideo={screenPresenter && screenPresenter !== element}\n        showAvatar={\n          !currentParticipant.video &&\n          !currentParticipant.screen &&\n          currentParticipant.name\n        }\n      />\n    );\n  });\n  return (\n    <div\n      style={{\n        \"--grid-size\": gridCol,\n        \"--grid-col-size\": gridColSize,\n        \"--grid-row-size\": gridRowSize,\n      }}\n      className={`participants`}\n    >\n      {participants}\n      <Participant\n        currentParticipant={currentUser}\n        curentIndex={participantKey.length}\n        hideVideo={screenPresenter && !currentUser.screen}\n        videoRef={videoRef}\n        showAvatar={currentUser && !currentUser.video && !currentUser.screen}\n        currentUser={true}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    participants: state.participants,\n    currentUser: state.currentUser,\n    stream: state.mainStream,\n  };\n};\n\nexport default connect(mapStateToProps)(Participants);\n","export const SET_MAIN_STREAM = \"SET_MAIN_STREAM\";\nexport const ADD_PARTICIPANT = \"ADD_PARTICIPANT\";\nexport const REMOVE_PARTICIPANT = \"REMOVE_PARTICIPANT\";\nexport const SET_USER = \"SET_USER\";\nexport const UPDATE_USER = \"UPDATE_USER\";\nexport const UPDATE_PARTICIPANT = \"UPDATE_PARTICIPANT\";\n","import {\n  SET_MAIN_STREAM,\n  ADD_PARTICIPANT,\n  SET_USER,\n  REMOVE_PARTICIPANT,\n  UPDATE_USER,\n  UPDATE_PARTICIPANT,\n} from \"./actiontypes\";\n\nexport const setMainStream = (stream) => {\n  return {\n    type: SET_MAIN_STREAM,\n    payload: {\n      mainStream: stream,\n    },\n  };\n};\n\nexport const setUser = (user) => {\n  return {\n    type: SET_USER,\n    payload: {\n      currentUser: user,\n    },\n  };\n};\n\nexport const addParticipant = (user) => {\n  return {\n    type: ADD_PARTICIPANT,\n    payload: {\n      newUser: user,\n    },\n  };\n};\n\nexport const updateUser = (user) => {\n  return {\n    type: UPDATE_USER,\n    payload: {\n      currentUser: user,\n    },\n  };\n};\n\nexport const updateParticipant = (user) => {\n  return {\n    type: UPDATE_PARTICIPANT,\n    payload: {\n      newUser: user,\n    },\n  };\n};\n\nexport const removeParticipant = (userId) => {\n  return {\n    type: REMOVE_PARTICIPANT,\n    payload: {\n      id: userId,\n    },\n  };\n};\n","import React, { useRef, useEffect } from \"react\";\nimport MeetingFooter from \"../MeetingFooter/MeetingFooter.component\";\nimport Participants from \"../Participants/Participants.component\";\nimport \"./MainScreen.css\";\nimport { connect } from \"react-redux\";\nimport { setMainStream, updateUser } from \"../../store/actioncreator\";\n\nconst MainScreen = (props) => {\n  const participantRef = useRef(props.participants);\n\n  const onMicClick = (micEnabled) => {\n    if (props.stream) {\n      props.stream.getAudioTracks()[0].enabled = micEnabled;\n      props.updateUser({ audio: micEnabled });\n    }\n  };\n  const onVideoClick = (videoEnabled) => {\n    if (props.stream) {\n      props.stream.getVideoTracks()[0].enabled = videoEnabled;\n      props.updateUser({ video: videoEnabled });\n    }\n  };\n\n  useEffect(() => {\n    participantRef.current = props.participants;\n  }, [props.participants]);\n\n  const updateStream = (stream) => {\n    for (let key in participantRef.current) {\n      const sender = participantRef.current[key];\n      if (sender.currentUser) continue;\n      const peerConnection = sender.peerConnection\n        .getSenders()\n        .find((s) => (s.track ? s.track.kind === \"video\" : false));\n      peerConnection.replaceTrack(stream.getVideoTracks()[0]);\n    }\n    props.setMainStream(stream);\n  };\n\n  const onScreenShareEnd = async () => {\n    const localStream = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: true,\n    });\n\n    localStream.getVideoTracks()[0].enabled = Object.values(\n      props.currentUser\n    )[0].video;\n\n    updateStream(localStream);\n\n    props.updateUser({ screen: false });\n  };\n\n  const onScreenClick = async () => {\n    let mediaStream;\n    if (navigator.getDisplayMedia) {\n      mediaStream = await navigator.getDisplayMedia({ video: true });\n    } else if (navigator.mediaDevices.getDisplayMedia) {\n      mediaStream = await navigator.mediaDevices.getDisplayMedia({\n        video: true,\n      });\n    } else {\n      mediaStream = await navigator.mediaDevices.getUserMedia({\n        video: { mediaSource: \"screen\" },\n      });\n    }\n\n    mediaStream.getVideoTracks()[0].onended = onScreenShareEnd;\n\n    updateStream(mediaStream);\n\n    props.updateUser({ screen: true });\n  };\n  return (\n    <div className=\"wrapper\">\n      <div className=\"main-screen\">\n        <Participants />\n      </div>\n\n      <div className=\"footer\">\n        <MeetingFooter\n          onScreenClick={onScreenClick}\n          onMicClick={onMicClick}\n          onVideoClick={onVideoClick}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    stream: state.mainStream,\n    participants: state.participants,\n    currentUser: state.currentUser,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setMainStream: (stream) => dispatch(setMainStream(stream)),\n    updateUser: (user) => dispatch(updateUser(user)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainScreen);\n","import firebase from \"firebase\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyC-QDmOW3bkpkKC5j3hNwCbjuG9CXRaIKM\", // Add API Key\n  databaseURL:\"https://meet-clone-d855d-default-rtdb.firebaseio.com/\" // Add databaseURL\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport const db = firebase;\n\nvar firepadRef = firebase.database().ref();\n\nexport const userName = prompt(\"What's your name?\");\nconst urlparams = new URLSearchParams(window.location.search);\nconst roomId = urlparams.get(\"id\");\n\nif (roomId) {\n  firepadRef = firepadRef.child(roomId);\n} else {\n  firepadRef = firepadRef.push();\n  window.history.replaceState(null, \"Meet\", \"?id=\" + firepadRef.key);\n}\n\nexport default firepadRef;\n","import MainScreen from \"./components/MainScreen/MainScreen.component\";\nimport firepadRef, { db, userName } from \"./server/firebase\";\nimport \"./App.css\";\nimport { useEffect } from \"react\";\nimport {\n  setMainStream,\n  addParticipant,\n  setUser,\n  removeParticipant,\n  updateParticipant,\n} from \"./store/actioncreator\";\nimport { connect } from \"react-redux\";\n\nfunction App(props) {\n  const getUserStream = async () => {\n    const localStream = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: true,\n    });\n\n    return localStream;\n  };\n  useEffect(async () => {\n    const stream = await getUserStream();\n    stream.getVideoTracks()[0].enabled = false;\n    props.setMainStream(stream);\n\n    connectedRef.on(\"value\", (snap) => {\n      if (snap.val()) {\n        const defaultPreference = {\n          audio: true,\n          video: false,\n          screen: false,\n        };\n        const userStatusRef = participantRef.push({\n          userName,\n          preferences: defaultPreference,\n        });\n        props.setUser({\n          [userStatusRef.key]: { name: userName, ...defaultPreference },\n        });\n        userStatusRef.onDisconnect().remove();\n      }\n    });\n  }, []);\n\n  const connectedRef = db.database().ref(\".info/connected\");\n  const participantRef = firepadRef.child(\"participants\");\n\n  const isUserSet = !!props.user;\n  const isStreamSet = !!props.stream;\n\n  useEffect(() => {\n    if (isStreamSet && isUserSet) {\n      participantRef.on(\"child_added\", (snap) => {\n        const preferenceUpdateEvent = participantRef\n          .child(snap.key)\n          .child(\"preferences\");\n        preferenceUpdateEvent.on(\"child_changed\", (preferenceSnap) => {\n          props.updateParticipant({\n            [snap.key]: {\n              [preferenceSnap.key]: preferenceSnap.val(),\n            },\n          });\n        });\n        const { userName: name, preferences = {} } = snap.val();\n        props.addParticipant({\n          [snap.key]: {\n            name,\n            ...preferences,\n          },\n        });\n      });\n      participantRef.on(\"child_removed\", (snap) => {\n        props.removeParticipant(snap.key);\n      });\n    }\n  }, [isStreamSet, isUserSet]);\n\n  return (\n    <div className=\"App\">\n      <MainScreen />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    stream: state.mainStream,\n    user: state.currentUser,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setMainStream: (stream) => dispatch(setMainStream(stream)),\n    addParticipant: (user) => dispatch(addParticipant(user)),\n    setUser: (user) => dispatch(setUser(user)),\n    removeParticipant: (userId) => dispatch(removeParticipant(userId)),\n    updateParticipant: (user) => dispatch(updateParticipant(user)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import firepadRef from \"./firebase\";\nimport { store } from \"../index\";\n\nconst participantRef = firepadRef.child(\"participants\");\n\nexport const updatePreference = (userId, preference) => {\n  const currentParticipantRef = participantRef\n    .child(userId)\n    .child(\"preferences\");\n  setTimeout(() => {\n    currentParticipantRef.update(preference);\n  });\n};\n\nexport const createOffer = async (peerConnection, receiverId, createdID) => {\n  const currentParticipantRef = participantRef.child(receiverId);\n  peerConnection.onicecandidate = (event) => {\n    event.candidate &&\n      currentParticipantRef\n        .child(\"offerCandidates\")\n        .push({ ...event.candidate.toJSON(), userId: createdID });\n  };\n\n  const offerDescription = await peerConnection.createOffer();\n  await peerConnection.setLocalDescription(offerDescription);\n\n  const offer = {\n    sdp: offerDescription.sdp,\n    type: offerDescription.type,\n    userId: createdID,\n  };\n\n  await currentParticipantRef.child(\"offers\").push().set({ offer });\n};\n\nexport const initializeListensers = async (userId) => {\n  const currentUserRef = participantRef.child(userId);\n\n  currentUserRef.child(\"offers\").on(\"child_added\", async (snapshot) => {\n    const data = snapshot.val();\n    if (data?.offer) {\n      const pc =\n        store.getState().participants[data.offer.userId].peerConnection;\n      await pc.setRemoteDescription(new RTCSessionDescription(data.offer));\n      await createAnswer(data.offer.userId, userId);\n    }\n  });\n\n  currentUserRef.child(\"offerCandidates\").on(\"child_added\", (snapshot) => {\n    const data = snapshot.val();\n    if (data.userId) {\n      const pc = store.getState().participants[data.userId].peerConnection;\n      pc.addIceCandidate(new RTCIceCandidate(data));\n    }\n  });\n\n  currentUserRef.child(\"answers\").on(\"child_added\", (snapshot) => {\n    const data = snapshot.val();\n    if (data?.answer) {\n      const pc =\n        store.getState().participants[data.answer.userId].peerConnection;\n      const answerDescription = new RTCSessionDescription(data.answer);\n      pc.setRemoteDescription(answerDescription);\n    }\n  });\n\n  currentUserRef.child(\"answerCandidates\").on(\"child_added\", (snapshot) => {\n    const data = snapshot.val();\n    if (data.userId) {\n      const pc = store.getState().participants[data.userId].peerConnection;\n      pc.addIceCandidate(new RTCIceCandidate(data));\n    }\n  });\n};\n\nconst createAnswer = async (otherUserId, userId) => {\n  const pc = store.getState().participants[otherUserId].peerConnection;\n  const participantRef1 = participantRef.child(otherUserId);\n  pc.onicecandidate = (event) => {\n    event.candidate &&\n      participantRef1\n        .child(\"answerCandidates\")\n        .push({ ...event.candidate.toJSON(), userId: userId });\n  };\n\n  const answerDescription = await pc.createAnswer();\n  await pc.setLocalDescription(answerDescription);\n\n  const answer = {\n    type: answerDescription.type,\n    sdp: answerDescription.sdp,\n    userId: userId,\n  };\n\n  await participantRef1.child(\"answers\").push().set({ answer });\n};\n","import {\n  SET_MAIN_STREAM,\n  ADD_PARTICIPANT,\n  SET_USER,\n  REMOVE_PARTICIPANT,\n  UPDATE_USER,\n  UPDATE_PARTICIPANT,\n} from \"./actiontypes\";\n\nimport {\n  createOffer,\n  initializeListensers,\n  updatePreference,\n} from \"../server/peerConnection\";\n\nlet defaultUserState = {\n  mainStream: null,\n  participants: {},\n  currentUser: null,\n};\n\nconst servers = {\n  iceServers: [\n    {\n      urls: [\n        \"stun:stun1.l.google.com:19302\",\n        \"stun:stun2.l.google.com:19302\",\n        \"stun:stun.l.google.com:19302\",\n        \"stun:stun3.l.google.com:19302\",\n        \"stun:stun4.l.google.com:19302\",\n        \"stun:stun.services.mozilla.com\",\n      ],\n    },\n  ],\n  iceCandidatePoolSize: 10,\n};\n\nconst generateColor = () =>\n  \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n\nexport const userReducer = (state = defaultUserState, action) => {\n  if (action.type === SET_MAIN_STREAM) {\n    let payload = action.payload;\n    state = { ...state, ...payload };\n    return state;\n  } else if (action.type === ADD_PARTICIPANT) {\n    let payload = action.payload;\n    const currentUserId = Object.keys(state.currentUser)[0];\n    const newUserId = Object.keys(payload.newUser)[0];\n    if (state.mainStream && currentUserId !== newUserId) {\n      payload.newUser = addConnection(\n        payload.newUser,\n        state.currentUser,\n        state.mainStream\n      );\n    }\n\n    if (currentUserId === newUserId)\n      payload.newUser[newUserId].currentUser = true;\n    payload.newUser[newUserId].avatarColor = generateColor();\n    let participants = { ...state.participants, ...payload.newUser };\n    state = { ...state, participants };\n    return state;\n  } else if (action.type === SET_USER) {\n    let payload = action.payload;\n    let participants = { ...state.participants };\n    const userId = Object.keys(payload.currentUser)[0];\n    payload.currentUser[userId].avatarColor = generateColor();\n    initializeListensers(userId);\n    state = { ...state, currentUser: { ...payload.currentUser }, participants };\n    return state;\n  } else if (action.type === REMOVE_PARTICIPANT) {\n    let payload = action.payload;\n    let participants = { ...state.participants };\n    delete participants[payload.id];\n    state = { ...state, participants };\n    return state;\n  } else if (action.type === UPDATE_USER) {\n    let payload = action.payload;\n    const userId = Object.keys(state.currentUser)[0];\n    updatePreference(userId, payload.currentUser);\n    state.currentUser[userId] = {\n      ...state.currentUser[userId],\n      ...payload.currentUser,\n    };\n    state = {\n      ...state,\n      currentUser: { ...state.currentUser },\n    };\n    return state;\n  } else if (action.type === UPDATE_PARTICIPANT) {\n    let payload = action.payload;\n    const newUserId = Object.keys(payload.newUser)[0];\n\n    payload.newUser[newUserId] = {\n      ...state.participants[newUserId],\n      ...payload.newUser[newUserId],\n    };\n    let participants = { ...state.participants, ...payload.newUser };\n    state = { ...state, participants };\n    return state;\n  }\n  return state;\n};\n\nconst addConnection = (newUser, currentUser, stream) => {\n  const peerConnection = new RTCPeerConnection(servers);\n  stream.getTracks().forEach((track) => {\n    peerConnection.addTrack(track, stream);\n  });\n  const newUserId = Object.keys(newUser)[0];\n  const currentUserId = Object.keys(currentUser)[0];\n\n  const offerIds = [newUserId, currentUserId].sort((a, b) =>\n    a.localeCompare(b)\n  );\n\n  newUser[newUserId].peerConnection = peerConnection;\n  if (offerIds[0] !== currentUserId)\n    createOffer(peerConnection, offerIds[0], offerIds[1]);\n  return newUser;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport { userReducer } from \"./store/reducer\";\n\nexport const store = createStore(userReducer);\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}